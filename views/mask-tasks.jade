extends layout

block content
    link(rel='stylesheet', href='/stylesheets/jquery-ui.min.css')
    link(rel='stylesheet' href='/stylesheets/messages.css')
    script(src='/javascripts/jquery-3.2.1.min.js')
    script(src='/javascripts/jquery-ui.min.js')
    script(src='/javascripts/messages.js')
    script.
        $(document).ready(function() {
            var reload = location.reload.bind(location)
            $('.taskSet').click(function() {
                $.get('/su/mask-task-set', { taskSet: $(this).next().text(), enable: this.checked } )
                    .fail(msg.ajaxError)
                    .done(reload)
            })
            $('.taskCheck').click(function() {
                $.get('/su/mask-task', { task: $(this).next().text(), enable: this.checked } )
                    .fail(msg.ajaxError)
                    .done(reload)
            })
            var timeoutId
            function loadPreview(url) {
                timeoutId = undefined
                $('#link-preview iframe').attr('src', url)
            }
            $('a.preview').mouseenter(function() {
                timeoutId = setTimeout(loadPreview.bind(null, this.href), 500)
                })
            .mouseleave(function() {
                if (timeoutId !== undefined)
                    clearTimeout(timeoutId)
            })
        })
    style.
        .taskContainer {
            padding-left: 2em;
            display: flex;
            flex-wrap: wrap;
        }
        .task {
            padding-right: 2em;
            display: flex;
        }
        .info {
            display: none;
        }
        #main {
            position: fixed;
            top: 0;
            left: 3em;
            right: 0;
            height: 55%;
            overflow: auto;
        }
        #link-preview {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 45%;
        }
        #link-preview iframe {
            width: 100%;
            height: 100%;
            border: 1px solid #000;
            transform: scale(1.0);
            transform-origin: 0 0;
        }
    #main
        #hdr
            h1 Доступные задания
            p новых: #{taskStats.unchosen}, нерешённых: #{taskStats.abandoned}, решённых: #{taskStats.solved}, решают сейчас: #{taskStats.inprogress}
        #tasks
            each taskSet, taskSetId in taskSets
                div
                    div.taskSetContainer
                        input.taskSet(type='checkbox' checked=sd.data.taskSetStatus(taskSetId)==='enabled')
                        span= taskSetId
                        span= ': ' + allTasks.taskSetDescription(taskSetId)
                    div.taskContainer
                        each taskId in taskSet
                            div.task
                                input.taskCheck(type='checkbox' checked=!sd.data.taskStatus(taskId).blocked)
                                span.info= taskId
                                - var taskStatusFormatted = sd.data.taskStatusFormatted(taskId)
                                a.preview(href='/su/task?task='+taskId target='_blank')= taskId.replace(taskSetId+':', '') + (taskStatusFormatted? ': ' + taskStatusFormatted: '')
    #link-preview
        iframe
