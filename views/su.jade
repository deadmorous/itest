extends layout

block content
    link(rel='stylesheet', href='stylesheets/jquery-ui.min.css')
    link(rel='stylesheet' href='/stylesheets/messages.css')
    style.
        .teamId {
            display: none;
        }
        #control input[type="radio"] {
            margin-left: 1em;
        }
        input[type="checkbox"] {
            margin-right: 0.5em;
        }
        input[type="text"] {
            margin-left: 0.5em;
        }

    script(src='/javascripts/jquery-3.2.1.min.js')
    script(src='/javascripts/jquery-ui.min.js')
    script(src='/javascripts/messages.js')
    script.
        $(document).ready(function() {
            var reload = location.reload.bind(location)
            function teamId(element) {
                return $(element).closest('tr').find('.teamId').text()
            }
            $('.mark').change(function() {
                $.post('/su/set-mark', {id: teamId(this), mark: $(this).val()})
                    .fail(msg.ajaxError)
            })
            $('.team-result').each(function() {
                this.href = encodeURI(this.href+'?id='+teamId(this))
            })
            var currentTeamId
            $('.remove').click(function() {
                currentTeamId = teamId(this)
                $('#confirm-remove').dialog('open')
            })
            $('.taskSolved').click(function() {
                $.post('/su/set-team-status', {id: teamId(this), taskSolved: $(this).prop('checked')})
                    .done(reload)
                    .fail(msg.ajaxError)
            })
            $('.taskAbandoned').click(function() {
                $.post('/su/set-team-status', {id: teamId(this), taskAbandoned: $(this).prop('checked')})
                    .done(reload)
                    .fail(msg.ajaxError)
            })
            $('.relogin').click(function() {
                $.post('/su/set-team-status', {id: teamId(this), allowExtraLogin: $(this).prop('checked')})
                    .fail(msg.ajaxError)
            })
            $('#confirm-remove').dialog({
                autoOpen: false,
                resizable: false,
                height: "auto",
                width: 400,
                modal: true,
                buttons: {
                    "Удалить": function() {
                        $.post('/su/remove-team', {id: currentTeamId})
                        $(this).dialog('close')
                        reload()
                    },
                    "Отмена": function() {
                        $(this).dialog('close')
                    }
                }
            })

            $('#confirm-clear').dialog({
                autoOpen: false,
                resizable: false,
                height: "auto",
                width: 400,
                modal: true,
                buttons: {
                    "Всё равно очистить": function() {
                        $.get('/su/clear', {force: true})
                            .done(reload)
                            .fail(msg.ajaxError)
                        $(this).dialog('close')
                    },
                    "Отмена": function() {
                        $(this).dialog('close')
                    }
                }
            })

            // Process the 'save' button
            $('#save').click(function(e) {
                e.preventDefault()
                $.post('/su/save', { nameEnding: $('#nameEnding').val() })
                    .done(reload)
                    .fail(msg.ajaxError)
            })

            // Process control links and file loading
            $('#loadfiles a').click(function(e) {
                e.preventDefault()
                $.get(this.href).done(reload).fail(msg.ajaxError)
            })

            // Process clear data link
            $('#clear-data').click(function(e) {
                e.preventDefault()
                $.get(this.href)
                    .done(reload)
                    .fail(function(xhr) {
                        if (xhr.status === 403)
                            $('#confirm-clear').dialog('open')
                        else
                            msg.ajaxError(xhr)
                    })
            })

            // Process the Deny login checkbox
            $('#denyLogin').click(function() {
                $.post('/su/deny-login', { value: $(this).prop('checked') })
                    .fail(msg.ajaxError)
            })

            $('#startWithTest').click(function() {
                $.post('/su/tasks-start-with-test', { value: $(this).prop('checked') }).fail(msg.ajaxError)
            })
            $('[name="maxTeamSize"]').click(function() {
                $.post('/su/set-max-team-size', {value: $(this).val()}).fail(msg.ajaxError)
            })
            $('[name="maxTasksPerTeam"]').click(function() {
                $.post('/su/set-tasks-per-team', {value: $(this).val()}).fail(msg.ajaxError)
            })
            $('#allowAllTasksAtOnce').click(function() {
                $.post('/su/tasks-allow-all-tasks-at-once', { value: $(this).prop('checked') }).fail(msg.ajaxError)
            })
        })
    #hdr
        h1 Страница экзаменатора
    #control
        h2 Управление
        .nested
            ul(style='list-style-type: none;')
                li: a(href='/su/exit') Выход
                li: a#clear-data(href='/su/clear') Очистить данные

            .nested
                h3 Структура работы<br>
                .nested
                    ul(style='list-style-type: none;')
                        li
                            input#startWithTest(type='checkbox' checked=studentData.startWithTest)
                            label(for='denyLogin')
                                | Начать с&nbsp;
                                a(href='/su/mask-test-questions', target='_blank') теста
                        li: a(href='/su/mask-tasks', target='_blank') Доступные задачи
                            | (новых: #{taskStats.unchosen}, нерешённых: #{taskStats.abandoned}, решённых: #{taskStats.solved}, решают сейчас: #{taskStats.inprogress})
                        li Максимальное число студентов в команде:
                            input#teamSize1(type='radio' name='maxTeamSize' value='1' checked=studentData.maxTeamSize===1)
                            label(for='maxTeamSize1') 1
                            input#maxTeamSize2(type='radio' name='maxTeamSize' value='2' checked=studentData.maxTeamSize===2)
                            label(for='maxTeamSize2') 2
                        li Максимальное число задач на команду:
                            input#maxTasksPerTeam1(type='radio' name='maxTasksPerTeam' value='1' checked=studentData.maxTasksPerTeam===1)
                            label(for='maxTasksPerTeam1') 1
                            input#maxTasksPerTeam2(type='radio' name='maxTasksPerTeam' value='2' checked=studentData.maxTasksPerTeam===2)
                            label(for='maxTasksPerTeam2') 2
                            input#maxTasksPerTeam3(type='radio' name='maxTasksPerTeam' value='3' checked=studentData.maxTasksPerTeam===3)
                            label(for='maxTasksPerTeam3') 3
                        li
                            input#allowAllTasksAtOnce(type='checkbox' checked=studentData.allowAllTasksAtOnce)
                            label(for='allowAllTasksAtOnce') Разрешить брать несколько задач одновременно
                        li
                            input#denyLogin(type='checkbox' checked=studentData.denyLogin)
                            label(for='denyLogin') Запретить идентификацию вновь прибывших

        .nested
            h3 Сохранение данных<br>
            .nested
                form
                    label(for='nameEnding') окончание имени
                    input#nameEnding(type='text' name='nameEnding' value=nameEnding)
                    br
                    input#save(type='submit' value='Сохранить')
            h3 Загрузка данных
            .nested#loadfiles
                table
                    tr
                        th имя
                    each file in files
                        tr
                            td: a(href='/su/load?file='+file)= file
    #students
        h2 Состояние
        table
            tr
                th Команда
                th Вариант
                th Результат
                th :)
                th :(
                th Оценка
                th ...
                th ->
            each team, index in studentData.teams()
                tr
                    td(style='rowspan: #{team.tasks.length};')= team.summary()
                        span.teamId= team.id()
                    each teamTask, teamTaskIndex in team.tasks
                        td: a(href='/su/task?task=#{teamTask.id}' target='_blank')= teamTask.id
                        td
                            if teamTask.result
                                a.team-result(href='/su/team-result?id=#{team.id()}&taskIndex=#{teamTaskIndex}' target='_blank') есть
                            else
                                | нет
                        td: input.taskSolved(type='checkbox' checked=teamTask.solved)
                        td: input.taskAbandoned(type='checkbox' checked=teamTask.abandoned)
                    td(style='rowspan: #{team.tasks.length};'): input.mark(type='text' value=team.mark||'')
                    td(style='rowspan: #{team.tasks.length};'): input.remove(type='button' value='удалить')
                    td(style='rowspan: #{team.tasks.length};'): input.relogin(type='checkbox' checked=team.allowExtraLogin)
    #confirm-remove(title="Действитьельно удалить?")
    #confirm-clear(title="Очистить данные?")
        p Текущее состояние не сохранено!
